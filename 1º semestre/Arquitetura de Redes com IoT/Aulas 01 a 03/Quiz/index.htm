<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en" prefix="dc: http://purl.org/dc/elements/1.1/">
   <head>
      <meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Daniel."/>
      <meta name="keywords" content="Hot Potatoes, Hot Potatoes, Half-Baked Software, Windows, University of Victoria"/>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
      <meta name="dc:creator" content="Daniel" />
      <meta name="dc:title" content="Quiz - Arquitetura de Redes com IoT" />
      <title>
         Quiz - Arquitetura de Redes com IoT
      </title>
      <!-- Made with executable version 7.0 Release 3 Build 0 -->
      <!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->
      <style>
         /* This is the CSS stylesheet used in the exercise. */
         /* Elements in square brackets are replaced by data based on configuration settings when the exercise is built. */
         /* BeginCorePageCSS */
         /* Made with executable version 7.0 Release 3 Build 0 */
         /* CSS variables for colours. */
         :root{
         --strFontFace:       Geneva,Arial,sans-serif;
         --strFontSize:       medium;
         --strTextColor:      #000000;
         --strTitleColor:     #000000;
         --strFuncLightColor: #ffffff;
         --strFuncShadeColor: #7f7f7f;
         --strLinkColor:      #0000FF;
         --strVLinkColor:     #0000CC;
         --strNavBarColor:    #000000;
         --strNavLightColor:  #7f7f7f;
         --strNavShadeColor:  #000000;
         --strNavTextColor:   #ffffff;
         --strPageBGColor:    #C0C0C0;
         --strExBGColor:      #FFFFFF;
         }
         body{
         font-family: var(--strFontFace);
         background-color: var(--strPageBGColor);
         color: var(--strTextColor);
         margin-right: 5%;
         margin-left: 5%;
         font-size: var(--strFontSize);
         padding-bottom: 0.5em;
         }
         p{
         text-align: left;
         margin: 0px;
         font-size: 1em;
         }
         table,div,span,td{
         font-size: 1em;
         color: var(--strTextColor);
         }
         div.Titles{
         padding: 0.5em;;
         text-align: center;
         color: var(--strTitleColor);
         }
         button{
         font-family: var(--strFontFace);
         font-size: 1em;
         display: inline;
         }
         .ExerciseTitle{
         font-size: 140%;
         color: var(--strTitleColor);
         }
         .ExerciseSubtitle{
         font-size: 120%;
         color: var(--strTitleColor);
         }
         div.StdDiv, div.ExerciseContainer, div.ReadingContainer{
         background-color: var(--strExBGColor);
         text-align: center;
         font-size: 1em;
         color: var(--strTextColor);
         padding: 0.5em;
         border-style: solid;
         border-width: 1px 1px 1px 1px;
         border-color: var(--strTextColor);
         margin-bottom: 1px;
         }
         div.ReadingContainer, div.ExerciseContainer{
         min-width: 15em;
         flex-grow: 1;
         flex-basis: 0;
         margin: 1px;
         }
         div#ContainerDiv{
         margin: -1px;
         padding: 0;
         border: none;
         display: flex;
         flex-direction: row;
         flex-wrap: wrap;
         justify-content: space-between;
         }
         /* EndCorePageCSS */
         .RTLText{
         text-align: right;
         font-size: 150%;
         direction: rtl;
         font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", var(--strFontFace); 
         }
         .CentredRTLText{
         text-align: center;
         font-size: 150%;
         direction: rtl;
         font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", var(--strFontFace); 
         }
         button p.RTLText{
         text-align: center;
         }
         .RTLGapBox{
         text-align: right;
         font-size: 150%;
         direction: rtl;
         font-family: "Times New Roman", var(--strFontFace);
         }
         .Guess{
         font-weight: bold;
         }
         .CorrectAnswer{
         font-weight: bold;
         }
         div#Timer{
         padding: 0.25em;
         margin-left: auto;
         margin-right: auto;
         text-align: center;
         color: var(--strTitleColor);
         }
         span#TimerText{
         padding: 0.25em;
         border-width: 1px;
         border-style: solid;
         font-weight: bold;
         display: none;
         color: var(--strTitleColor);
         }
         span.Instructions{
         }
         div.ExerciseText{
         }
         .FeedbackText, .FeedbackText span.CorrectAnswer, .FeedbackText span.Guess, .FeedbackText span.Answer{
         color: var(--strTitleColor);
         }
         .LeftItem{
         font-size: 1em;
         color: var(--strTextColor);
         text-align: left;
         }
         .RightItem{
         font-weight: bold;
         font-size: 1em;
         color: var(--strTextColor);
         text-align: left;
         }
         span.CorrectMark{
         }
         input, textarea{
         font-family: var(--strFontFace);
         font-size: 120%;
         }
         select{
         font-size: 1em;
         }
         div.Feedback {
         background-color: var(--strPageBGColor);
         left: 33%;
         width: 34%;
         top: 33%;
         z-index: 1;
         border-style: solid;
         border-width: 1px;
         padding: 5px;
         text-align: center;
         color: var(--strTitleColor);
         position: absolute;
         display: none;
         font-size: 1em;
         }
         div.ExerciseDiv{
         color: var(--strTextColor);
         }
         /* JMatch standard output table. */
         table.MatchTable{
         margin: 2em auto; 
         border-width: 0;
         }
         /* JMatch flashcard styles */
         table.FlashcardTable{
         background-color: transparent;
         color: var(--strTextColor);
         border-color: var(--strTextColor);
         margin-left: auto;
         margin-right: auto;
         margin-top: 2em;
         margin-bottom: 2em;
         /*width: 90%;*/
         position: relative;
         text-align: center;
         padding: 0px;
         }
         table.FlashcardTable tr{
         border-style: none;
         margin: 0px;
         padding: 0px;
         background-color: var(--strExBGColor);
         }
         table.FlashcardTable td.Showing{
         font-size: 140%;
         text-align: center;
         width: 50%;
         display: table-cell;
         padding: 2em;
         margin: 0px;
         border-style: solid;
         border-width: 1px;
         border-radius: 0.5em;
         color: var(--strTextColor);
         box-shadow: 0.2em 0.3em 0.2em var(--strNavShadeColor);
         background-color: var(--strPageBGColor);
         }
         table.FlashcardTable td.Hidden{
         display: none;
         }
         /* JMix styles */
         div.JMixDrag, div.JMatchDrag{
         padding: 0;
         background-color: var(--strPageBGColor);
         border-style: none;
         }
         div#GuessDiv{
         padding: 0.5em;
         margin-bottom: 2em;
         }
         div#SegmentDiv{
         margin-top: 2em;
         margin-bottom: 2em;
         text-align: center;
         }
         a.ExSegment{
         font-size: 120%;
         font-weight: bold;
         text-decoration: none;
         color: var(--strTextColor);
         display: inline-block;
         padding: 0.5em;
         border: solid 1pt gray;
         margin-bottom: 0.5em;
         }
         span.RemainingWordList{
         font-style: italic;
         }
         div.DropLine {
         position: absolute;
         text-align: left;
         border-bottom-style: solid;
         border-bottom-width: 1px;
         border-bottom-color: var(--strTitleColor);
         width: 80%;
         left: 10%;
         }
         /* JCloze styles */
         .ClozeWordList{
         text-align: center;
         font-weight: bold;
         }
         div.ClozeBody{
         text-align: left;
         margin-top: 2em;
         margin-bottom: 2em;
         line-height: 2.0
         }
         span.GapSpan{
         font-weight: bold;
         }
         /* JCross styles */
         table.CrosswordGrid{
         margin: auto auto 1em auto;
         border-collapse: collapse;
         padding: 0px;
         background-color: #000000;
         }
         table.CrosswordGrid tbody tr td{
         width: 1.5em;
         height: 1.5em;
         text-align: center;
         vertical-align: middle;
         font-size: 140%;
         padding: 1px;
         margin: 0px;
         border-style: solid;
         border-width: 1px;
         border-color: #000000;
         color: #000000;
         }
         table.CrosswordGrid span{
         color: #000000;
         }
         table.CrosswordGrid td.BlankCell{
         background-color: #000000;
         color: #000000;
         }
         table.CrosswordGrid td.LetterOnlyCell{
         text-align: center;
         vertical-align: middle;
         background-color: #ffffff;
         color: #000000;
         font-weight: bold;
         }
         table.CrosswordGrid td.NumLetterCell{
         text-align: left;
         vertical-align: top;
         background-color: #ffffff;
         color: #000000;
         padding: 1px;
         font-weight: bold;
         }
         .NumLetterCellText{
         cursor: pointer;
         color: #000000;
         }
         .GridNum{
         vertical-align: super;
         font-size: 66%;
         font-weight: bold;
         text-decoration: none;
         color: #000000;
         }
         .GridNum:hover, .GridNum:visited{
         color: #000000;
         }
         table#Clues{
         margin: auto;
         vertical-align: top;
         }
         table#Clues td{
         vertical-align: top;
         }
         table.ClueList{
         margin: auto;
         }
         td.ClueNum{
         text-align: right;
         font-weight: bold;
         vertical-align: top;
         }
         td.Clue{
         text-align: left;
         }
         div#ClueEntry{
         text-align: left;
         margin-bottom: 1em;
         }
         /* Keypad styles */
         div.Keypad{
         text-align: center;
         display: none; /* initially hidden, shown if needed */
         margin-bottom: 0.5em;
         }
         div.Keypad button{
         font-family: var(--strFontFace);
         font-size: 120%;
         background-color: #ffffff;
         color: #000000;
         width: 2em;
         border-style: solid;
         border-width: 1px;
         border-radius: 0.5em;
         color: var(--strTextColor);
         box-shadow: 0.2em 0.3em 0.2em var(--strTextColor);
         }
         /* JQuiz styles */
         div.QuestionNavigation{
         text-align: center;
         }
         .QNum{
         margin: 0em 1em 0.5em 1em;
         font-weight: bold;
         vertical-align: middle;
         }
         textarea{
         font-family: var(--strFontFace);
         }
         .QuestionText{
         text-align: left;
         margin: 0px;
         font-size: 1.5em;
		 font-weight: 600;
		 margin-bottom: 20px;
         }
         .Answer{
         font-size: 120%;
         }
         .PartialAnswer{
         font-size: 120%;
         letter-spacing: 0.1em;
         color: var(--strTitleColor);
         }
         .Highlight{
         color: #000000;
         background-color: #ffff00;
         font-weight: bold;
         font-size: 120%;
         }
         ol.QuizQuestions{
         text-align: left;
         list-style-type: none;
         }
         li.QuizQuestion{
         padding: 1em;
         border-style: solid;
         border-width: 0px 0px 1px 0px;
         }
         ol.MCAnswers{
         text-align: left;
         list-style-type: upper-alpha;
         padding: 1em;
         }
         ol.MCAnswers li{
         margin-bottom: 1em;
         }
         ol.MSelAnswers{
         text-align: left;
         list-style-type: lower-alpha;
         padding: 1em;
         }
         div.ShortAnswer{
         padding: 1em;
         }
         .FuncButton {
         border-style: solid;
         border-radius: 0.5em;
         padding: 0.5em;
         min-width: 3em;
         border-left-color: var(--strFuncLightColor);
         border-top-color: var(--strFuncLightColor);
         border-right-color: var(--strFuncShadeColor);
         border-bottom-color: var(--strFuncShadeColor);
         color: var(--strTextColor);
         background-color: var(--strExBGColor);
         border-width: 1pt;
         cursor: pointer;	
         box-shadow: 0.2em 0.3em 0.2em var(--strFuncShadeColor);
         }
         .FuncButton:active {
         box-shadow: none;
         }
         .FuncButton:hover{
         color: var(--strExBGColor);
         background-color: var(--strTextColor);
         }
         /*BeginNavBarStyle*/
         div.NavButtonBar{
         background-color: var(--strNavBarColor);
         text-align: center;
         margin: 0.25rem 0;
         clear: both;
         font-size: 1em;
         padding: 0.2em;
         box-sizing: border-box;
         }
         .NavButton {
         border-style: solid;
         border-radius: 0.5em;
         padding: 0.5em;
         min-width: 3em;
         border-left-color: var(--strNavLightColor);
         border-top-color: var(--strNavLightColor);
         border-right-color: var(--strNavShadeColor);
         border-bottom-color: var(--strNavShadeColor); 
         background-color: var(--strNavBarColor);
         color: var(--strNavTextColor);
         border-width: 1pt;
         cursor: pointer;	
         box-shadow: 0.2em 0.3em 0.2em var(--strNavShadeColor);
         }
         .NavButton:active {
         box-shadow: none;
         }
         .NavButton:hover{
         color: var(--strNavBarColor);
         background-color: var(--strNavTextColor);
         }
         /*EndNavBarStyle*/
         a{
         color: var(--strLinkColor);
         }
         a:visited{
         color: var(--strVLinkColor);
         }
         a:hover{
         color: var(--strLinkColor);
         }
         div.CardStyle {
         position: absolute;
         font-family: var(--strFontFace);
         font-size: 1em;
         border-style: solid;
         border-radius: 0.5em;
         padding: 0.5em;
         min-width: 2em;
         border-width: 1pt;
         color: var(--strTextColor);
         box-shadow: 0.2em 0.3em 0.2em var(--strTextColor);
         background-color: var(--strExBGColor);
         left: -50px;
         top: -50px;
         overflow: visible;
         touch-action: none;
         user-select: none;
         box-sizing: border-box;
         }
         div.CardStyleCentered{
         text-align: center;
         }
         .rtl{
         text-align: right;
         font-size: 140%;
         }
      </style>
      <script>
         //<![CDATA[
         
         <!--
         
         
         
         
         //CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS
         
         function FocusAButton(){
         	if (document.getElementById('CheckButton1') != null){
         		document.getElementById('CheckButton1').focus();
         	}
         	else{
         		if (document.getElementById('CheckButton2') != null){
         			document.getElementById('CheckButton2').focus();
         		}
         		else{
         			document.getElementsByTagName('button')[0].focus();
         		}
         	}
         }
         
         
         
         
         //CODE FOR HANDLING DISPLAY OF POPUP FEEDBACK BOX
         
         var topZ = 1000;
         
         function ShowMessage(Feedback){
         	var Output = Feedback + '<br /><br />';
         	document.getElementById('FeedbackContent').innerHTML = Output;
         	var FDiv = document.getElementById('FeedbackDiv');
         	topZ++;
         	FDiv.style.zIndex = topZ;
         	FDiv.style.top = TopSettingWithScrollOffset(30) + 'px';
         
         	FDiv.style.display = 'block';
         
         	ShowElements(false, 'input');
         	ShowElements(false, 'select');
         	ShowElements(false, 'object');
         	ShowElements(true, 'object', 'FeedbackContent');
         
         //Focus the OK button
         	setTimeout("document.getElementById('FeedbackOKButton').focus()", 50);
         	
         //
         }
         
         function ShowElements(Show, TagName, ContainerToReverse){
         // added third argument to allow objects in the feedback box to appear
         //IE bug -- hide all the form elements that will show through the popup
         //FF on Mac bug : doesn't redisplay objects whose visibility is set to visible
         //unless the object's display property is changed
         
         	//get container object (by Id passed in, or use document otherwise)
         	TopNode = document.getElementById(ContainerToReverse);
         	var Els;
         	if (TopNode != null) {
         		Els = TopNode.getElementsByTagName(TagName);
         	} else {
         		Els = document.getElementsByTagName(TagName);
         	}
         
         	for (var i=0; i<Els.length; i++){
         		if (TagName == "object") {
         			//manipulate object elements in all browsers
         			if (Show == true){
         				Els[i].style.visibility = 'visible';
         			}
         			else{
         				Els[i].style.visibility = 'hidden';
         			}
         		} 
         	}
         }
         
         
         
         function HideFeedback(){
         	document.getElementById('FeedbackDiv').style.display = 'none';
         	ShowElements(true, 'input');
         	ShowElements(true, 'select');
         	ShowElements(true, 'object');
         }
         
         
         //GENERAL UTILITY FUNCTIONS AND VARIABLES
         
         //PAGE DIMENSION FUNCTIONS
         function PageDim(){
         //Get the page width and height
         	this.W = 600;
         	this.H = 400;
         	this.W = document.getElementsByTagName('body')[0].offsetWidth;
         	this.H = document.getElementsByTagName('body')[0].offsetHeight;
         }
         
         var pg = null;
         
         function GetPageXY(El) {
         	var XY = {x: 0, y: 0};
         	while(El){
         		XY.x += El.offsetLeft;
         		XY.y += El.offsetTop;
         		El = El.offsetParent;
         	}
         	return XY;
         }
         
         function GetScrollTop(){
         	if (typeof(window.pageYOffset) == 'number'){
         		return window.pageYOffset;
         	}
         	else{
         		if ((document.body)&&(document.body.scrollTop)){
         			return document.body.scrollTop;
         		}
         		else{
         			if ((document.documentElement)&&(document.documentElement.scrollTop)){
         				return document.documentElement.scrollTop;
         			}
         			else{
         				return 0;
         			}
         		}
         	}
         }
         
         function GetViewportHeight(){
         	if (typeof window.innerHeight != 'undefined'){
         		return window.innerHeight;
         	}
         	else{
         		if (((typeof document.documentElement != 'undefined')&&(typeof document.documentElement.clientHeight !=
              'undefined'))&&(document.documentElement.clientHeight != 0)){
         			return document.documentElement.clientHeight;
         		}
         		else{
         			return document.getElementsByTagName('body')[0].clientHeight;
         		}
         	}
         }
         
         function TopSettingWithScrollOffset(TopPercent){
         	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
         	return GetScrollTop() + T; 
         }
         
         //CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
         var InTextBox = false;
         
         function SuppressBackspace(e){ 
         	if (InTextBox == true){return;}
         	thisKey = e.keyCode;
         
         	var Suppress = false;
         
         	if (thisKey == 8) {
         		Suppress = true;
         		e.preventDefault();
         	}
         }
         
         window.addEventListener('keypress',SuppressBackspace,false);
         
         function ReduceItems(InArray, ReduceToSize){
         	var ItemToDump=0;
         	var j=0;
         	while (InArray.length > ReduceToSize){
         		ItemToDump = Math.floor(InArray.length*Math.random());
         		InArray.splice(ItemToDump, 1);
         	}
         }
         
         function Shuffle(InArray){
         	var Num;
         	var Temp = new Array();
         	var Len = InArray.length;
         
         	var j = Len;
         
         	for (var i=0; i<Len; i++){
         		Temp[i] = InArray[i];
         	}
         
         	for (i=0; i<Len; i++){
         		Num = Math.floor(j  *  Math.random());
         		InArray[i] = Temp[Num];
         
         		for (var k=Num; k < (j-1); k++) {
         			Temp[k] = Temp[k+1];
         		}
         		j--;
         	}
         	return InArray;
         }
         
         function WriteToInstructions(Feedback) {
         	document.getElementById('InstructionsDiv').innerHTML = Feedback;
         
         }
         
         
         
         
         function EscapeDoubleQuotes(InString){
         	return InString.replace(/"/g, '&quot;')
         }
         
         function TrimString(InString){
                 var x = 0;
         
                 if (InString.length != 0) {
                         while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                                 InString = InString.substring(0, InString.length - 1)
                         }
         
                         while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                                 InString = InString.substring(1, InString.length)
                         }
         
                         while (InString.indexOf('  ') != -1) {
                                 x = InString.indexOf('  ')
                                 InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                          }
         
                         return InString;
                 }
         
                 else {
                         return '';
                 }
         }
         
         function FindLongest(InArray){
         	if (InArray.length < 1){return -1;}
         
         	var Longest = 0;
         	for (var i=1; i<InArray.length; i++){
         		if (InArray[i].length > InArray[Longest].length){
         			Longest = i;
         		}
         	}
         	return Longest;
         }
         
         //SELECTION OBJECT FOR TYPING WITH KEYPAD
         var selObj = null;
                     
         SelObj = function(box){
         	this.box = box;
         	this.selStart = this.box.selectionStart;
         	this.selEnd = this.box.selectionEnd;
         	this.selText = this.box.value.substring(this.selStart, this.selEnd);
         	return this;
         }
         
         function setSelText(newText){
         	var caretPos = this.selStart + newText.length;
         	var newValue = this.box.value.substring(0, this.selStart);
         	newValue += newText;
         	newValue += this.box.value.substring(this.selEnd, this.box.value.length);
         	this.box.value = newValue;
         	this.box.setSelectionRange(caretPos, caretPos);
         	this.box.focus();
         }
         SelObj.prototype.setSelText = setSelText;
         
         function setSelSelectionRange(start, end){
         	this.box.setSelectionRange(start, end);
         }
         SelObj.prototype.setSelSelectionRange = setSelSelectionRange;
         
         //UNICODE CHARACTER FUNCTIONS
         function IsCombiningDiacritic(CharNum){
         	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
         	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
         	return Result;
         }
         
         function IsCJK(CharNum){
         	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
         }
         
         //SETUP FUNCTIONS
         //BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
         function ClearTextBoxes(){
         	var NList = document.getElementsByTagName('input');
         	for (var i=0; i<NList.length; i++){
         		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
         			NList[i].value = '';
         		}
         		if (NList[i].id.indexOf('Chk') > -1){
         			NList[i].checked = '';
         		}
         	}
         }
         
         
         
         
         
         
         
         //JQUIZ CORE JAVASCRIPT CODE
         
         var CurrQNum = 0;
         var CorrectIndicator = '&#x2714;';
         var IncorrectIndicator = '&#x2718;';
         var YourScoreIs = 'Sua pontuação é: ';
         
         //New for 6.2.2.0
         var CompletedSoFar = 'Perguntas completadas até agora: ';
			var ExerciseCompleted = 'Você completou o exercício.';
			var ShowCompletedSoFar = true;

			var ContinuousScoring = true;
			var CorrectFirstTime = 'Perguntas respondidas corretamente na primeira tentativa: ';
			var ShowCorrectFirstTime = true;
			var ShuffleQs = false;
			var ShuffleAs = false;
			var DefaultRight = 'Correto!';
			var DefaultWrong = 'Desculpe! Tente novamente.';
			var QsToShow = 23;
			var Score = 0;
			var Finished = false;
			var Qs = null;
			var QArray = new Array();
			var ShowingAllQuestions = false;
			var ShowAllQuestionsCaption = 'Mostrar todas as perguntas';
			var ShowOneByOneCaption = 'Mostrar perguntas uma a uma';
			var State = new Array();
			var Feedback = '';
			var TimeOver = false;
			var strInstructions = '';
			var Locked = false;

		 
		 
         
         //The following variable can be used to add a message explaining that
         //the question is finished, so no further marking will take place.
         var strQuestionFinished = '';
         
         function CompleteEmptyFeedback(){
         	var QNum, ANum;
         	for (QNum=0; QNum<I.length; QNum++){
         //Only do this if not multi-select
         		if (I[QNum][2] != '3'){
           		for (ANum = 0; ANum<I[QNum][3].length; ANum++){
           			if (I[QNum][3][ANum][1].length < 1){
           				if (I[QNum][3][ANum][2] > 0){
           					I[QNum][3][ANum][1] = DefaultRight;
           				}
           				else{
           					I[QNum][3][ANum][1] = DefaultWrong;
           				}
           			}
           		}
         		}
         	}
         }
         
         function SetUpQuestions(){
         	var AList = new Array(); 
         	var QList = new Array();
         	var i, j;
         	Qs = document.getElementById('Questions');
         	while (Qs.getElementsByTagName('li').length > 0){
         		QList.push(Qs.removeChild(Qs.getElementsByTagName('li')[0]));
         	}
         	var DumpItem = 0;
         	if (QsToShow > QList.length){
         		QsToShow = QList.length;
         	}
         	while (QsToShow < QList.length){
         		DumpItem = Math.floor(QList.length*Math.random());
         		for (j=DumpItem; j<(QList.length-1); j++){
         			QList[j] = QList[j+1];
         		}
         		QList.length = QList.length-1;
         	}
         	if (ShuffleQs == true){
         		QList = Shuffle(QList);
         	}
         	if (ShuffleAs == true){
         		var As;
         		for (var i=0; i<QList.length; i++){
         			As = QList[i].getElementsByTagName('ol')[0];
         			if (As != null){
           			AList.length = 0;
         				while (As.getElementsByTagName('li').length > 0){
         					AList.push(As.removeChild(As.getElementsByTagName('li')[0]));
         				}
         				AList = Shuffle(AList);
         				for (j=0; j<AList.length; j++){
         					As.appendChild(AList[j]);
         				}
         			}
         		}
         	}
         	
         	for (i=0; i<QList.length; i++){
         		Qs.appendChild(QList[i]);
         		QArray[QArray.length] = QList[i];
         	}
         
         //Show the first item
         	QArray[0].style.display = '';
         	
         //Now hide all except the first item
         	for (i=1; i<QArray.length; i++){
         		QArray[i].style.display = 'none';
         	}		
         	SetQNumReadout();
         	
         	SetFocusToTextbox();
         }
         
         function SetFocusToTextbox(){
         //if there's a textbox, set the focus in it
         	if (QArray[CurrQNum].getElementsByTagName('input')[0] != null){
         		QArray[CurrQNum].getElementsByTagName('input')[0].focus();
         //and show a keypad if there is one
         		if (document.getElementById('CharacterKeypad') != null){
         			document.getElementById('CharacterKeypad').style.display = 'block';
         		}
         	}
         	else{
           	if (QArray[CurrQNum].getElementsByTagName('textarea')[0] != null){
           		QArray[CurrQNum].getElementsByTagName('textarea')[0].focus();	
         //and show a keypad if there is one
         			if (document.getElementById('CharacterKeypad') != null){
         				document.getElementById('CharacterKeypad').style.display = 'block';
         			}
         		}
         //This added for 6.0.4.11: hide accented character buttons if no textbox
         		else{
         			if (document.getElementById('CharacterKeypad') != null){
         				document.getElementById('CharacterKeypad').style.display = 'none';
         			}
         		}
         	}
         }
         
         function ChangeQ(ChangeBy){
         //The following line prevents moving to another question until the current
         //question is answered correctly. Uncomment it to enable this behaviour. 
         //	if (State[CurrQNum][0] == -1){return;}
         	if (((CurrQNum + ChangeBy) < 0)||((CurrQNum + ChangeBy) >= QArray.length)){return;}
         	QArray[CurrQNum].style.display = 'none';
         	CurrQNum += ChangeBy;
         	QArray[CurrQNum].style.display = '';
         //Undocumented function added 10/12/2004
         	ShowSpecialReadingForQuestion();
         	SetQNumReadout();
         	SetFocusToTextbox();
         }
         
         var HiddenReadingShown = false;
         function ShowSpecialReadingForQuestion(){
         //Undocumented function for showing specific reading text elements which change with each question
         //Added on 10/12/2004
         	if (document.getElementById('ReadingDiv') != null){
         		if (HiddenReadingShown == true){
         			document.getElementById('ReadingDiv').innerHTML = '';
         		}
         		if (QArray[CurrQNum] != null){
         //Fix for 6.0.4.25
         			var Children = QArray[CurrQNum].getElementsByTagName('div');
         			for (var i=0; i<Children.length; i++){
         			if (Children[i].className=="HiddenReading"){
         					document.getElementById('ReadingDiv').innerHTML = Children[i].innerHTML;
         					HiddenReadingShown = true;
         //Hide the ShowAllQuestions button to avoid confusion
         					if (document.getElementById('ShowMethodButton') != null){
         						document.getElementById('ShowMethodButton').style.display = 'none';
         					}
         				}
         			}	
         		}
         	}
         }
         
         function SetQNumReadout(){
         	document.getElementById('QNumReadout').innerHTML = (CurrQNum+1) + ' / ' + QArray.length;
         	if ((CurrQNum+1) >= QArray.length){
         		if (document.getElementById('NextQButton') != null){
         			document.getElementById('NextQButton').style.visibility = 'hidden';
         		}
         	}
         	else{
         		if (document.getElementById('NextQButton') != null){
         			document.getElementById('NextQButton').style.visibility = 'visible';
         		}
         	}
         	if (CurrQNum <= 0){
         		if (document.getElementById('PrevQButton') != null){
         			document.getElementById('PrevQButton').style.visibility = 'hidden';
         		}
         	}
         	else{
         		if (document.getElementById('PrevQButton') != null){
         			document.getElementById('PrevQButton').style.visibility = 'visible';
         		}
         	}
         }
         
         var I=new Array();
         I[0]=new Array();I[0][0]=100;
         I[0][1]='';
         I[0][2]='0';
         I[0][3]=new Array();
         I[0][3][0]=new Array('A presen\u00E7a de um sistema operacional avan\u00E7ado.','',0,0,1);
         I[0][3][1]=new Array('A capacidade de armazenamento de cada computador.','',0,0,1);
         I[0][3][2]=new Array('A conex\u00E3o entre computadores para envio e recebimento de dados.','',1,100,1);
         I[0][3][3]=new Array('A velocidade de processamento do computador.','',0,0,1);
         I[1]=new Array();I[1][0]=100;
         I[1][1]='';
         I[1][2]='0';
         I[1][3]=new Array();
         I[1][3][0]=new Array('Usu\u00E1rios que possuem pelo menos dois computadores, como um desktop e um laptop por exemplo.','',1,100,1);
         I[1][3][1]=new Array('Apenas usu\u00E1rios corporativos com grande n\u00FAmero de computadores.','',0,0,1);
         I[1][3][2]=new Array('Apenas usu\u00E1rios que navegam na internet.','',0,0,1);
         I[1][3][3]=new Array('Apenas usu\u00E1rios com computadores de alta performance.','',0,0,1);
         I[2]=new Array();I[2][0]=100;
         I[2][1]='';
         I[2][2]='0';
         I[2][3]=new Array();
         I[2][3][0]=new Array('\u00C0s instru\u00E7\u00F5es de programa\u00E7\u00E3o espec\u00EDficas de um software.','',0,0,1);
         I[2][3][1]=new Array('\u00C0 est\u00E9tica visual de interfaces de usu\u00E1rio.','',0,0,1);
         I[2][3][2]=new Array('Ao design f\u00EDsico dos dispositivos de hardware.','',0,0,1);
         I[2][3][3]=new Array('\u00C0 estrutura geral de um sistema de software ou hardware.','',1,100,1);
         I[3]=new Array();I[3][0]=100;
         I[3][1]='';
         I[3][2]='0';
         I[3][3]=new Array();
         I[3][3][0]=new Array('Estabelecer as normas de seguran\u00E7a para os sistemas.','',0,0,1);
         I[3][3][1]=new Array('Descrever a forma como os componentes do sistema se relacionam e funcionam juntos.','',1,100,1);
         I[3][3][2]=new Array('Definir as pol\u00EDticas de uso para os usu\u00E1rios do sistema.','',0,0,1);
         I[3][3][3]=new Array('Descrever a apar\u00EAncia externa dos componentes do sistema.','',0,0,1);
         I[4]=new Array();I[4][0]=100;
         I[4][1]='';
         I[4][2]='0';
         I[4][3]=new Array();
         I[4][3][0]=new Array('A necessidade de configura\u00E7\u00F5es complexas e t\u00E9cnicas avan\u00E7adas para sua implementa\u00E7\u00E3o.','',0,0,1);
         I[4][3][1]=new Array('A capacidade de cada dispositivo atuar apenas como cliente.','',0,0,1);
         I[4][3][2]=new Array('A presen\u00E7a de um servidor central que gerencia todos os dados e recursos.','',0,0,1);
         I[4][3][3]=new Array('A igualdade de fun\u00E7\u00E3o entre os dispositivos, podendo agir como cliente ou servidor.','',1,100,1);
         I[5]=new Array();I[5][0]=100;
         I[5][1]='';
         I[5][2]='0';
         I[5][3]=new Array();
         I[5][3][0]=new Array('Facilidade de implementa\u00E7\u00E3o e configura\u00E7\u00E3o pelos pr\u00F3prios usu\u00E1rios.','',1,100,1);
         I[5][3][1]=new Array('Estrutura complexa que suporta grandes volumes de tr\u00E1fego de dados.','',0,0,1);
         I[5][3][2]=new Array('Alto desempenho em transmiss\u00F5es de dados devido \u00E0 presen\u00E7a de um servidor central.','',0,0,1);
         I[5][3][3]=new Array('Alta seguran\u00E7a e controle centralizado dos dados.','',0,0,1);
         I[6]=new Array();I[6][0]=100;
         I[6][1]='';
         I[6][2]='0';
         I[6][3]=new Array();
         I[6][3][0]=new Array('A incapacidade de compartilhar arquivos e recursos entre dispositivos.','',0,0,1);
         I[6][3][1]=new Array('A vulnerabilidade \u00E0 seguran\u00E7a, devido \u00E0 falta de um gerenciamento centralizado.','',1,100,1);
         I[6][3][2]=new Array('A alta complexidade para usu\u00E1rios comuns configurarem a rede.','',0,0,1);
         I[6][3][3]=new Array('A necessidade de hardware especializado e caro.','',0,0,1);
         I[7]=new Array();I[7][0]=100;
         I[7][1]='';
         I[7][2]='0';
         I[7][3]=new Array();
         I[7][3][0]=new Array('Um sistema em que os clientes fornecem recursos uns aos outros sem a necessidade de um servidor central.','',0,0,1);
         I[7][3][1]=new Array('Uma configura\u00E7\u00E3o onde cada dispositivo \u00E9 independente e n\u00E3o h\u00E1 servidores ou clientes.','',0,0,1);
         I[7][3][2]=new Array('Uma estrutura em que um servidor centralizado atende a v\u00E1rios clientes, fornecendo diversos servi\u00E7os.','',1,100,1);
         I[7][3][3]=new Array('Uma rede em que todos os computadores agem como servidores e clientes simultaneamente.','',0,0,1);
         I[8]=new Array();I[8][0]=100;
         I[8][1]='';
         I[8][2]='0';
         I[8][3]=new Array();
         I[8][3][0]=new Array('A independ\u00EAncia dos clientes, que n\u00E3o precisam de um servidor para comunica\u00E7\u00E3o.','',0,0,1);
         I[8][3][1]=new Array('A facilidade de configura\u00E7\u00E3o e manuten\u00E7\u00E3o por usu\u00E1rios leigos.','',0,0,1);
         I[8][3][2]=new Array('A capacidade de funcionar eficientemente sem um servidor central.','',0,0,1);
         I[8][3][3]=new Array('O controle centralizado dos recursos da rede e maior seguran\u00E7a.','',1,100,1);
         I[9]=new Array();I[9][0]=100;
         I[9][1]='';
         I[9][2]='0';
         I[9][3]=new Array();
         I[9][3][0]=new Array('A depend\u00EAncia da rede em rela\u00E7\u00E3o \u00E0 disponibilidade e desempenho do servidor central.','',1,100,1);
         I[9][3][1]=new Array('A alta vulnerabilidade \u00E0 seguran\u00E7a devido \u00E0 falta de um servidor central.','',0,0,1);
         I[9][3][2]=new Array('A incapacidade de compartilhar arquivos e recursos diretamente entre os clientes.','',0,0,1);
         I[9][3][3]=new Array('A complexidade na configura\u00E7\u00E3o inicial da rede.','',0,0,1);
         I[10]=new Array();I[10][0]=100;
         I[10][1]='';
         I[10][2]='0';
         I[10][3]=new Array();
         I[10][3][0]=new Array('Hier\u00E1rquica, com v\u00E1rios n\u00EDveis de servidores e clientes.','',0,0,1);
         I[10][3][1]=new Array('Servidor dedicado, com um dispositivo espec\u00EDfico designado para cada servi\u00E7o na rede.','',0,0,1);
         I[10][3][2]=new Array('Ponto-a-ponto, onde todos os dispositivos t\u00EAm o mesmo status e podem compartilhar recursos.','',1,100,1);
         I[10][3][3]=new Array('Cliente-Servidor, com um servidor centralizado gerenciando todos os recursos.','',0,0,1);
         I[11]=new Array();I[11][0]=100;
         I[11][1]='';
         I[11][2]='0';
         I[11][3]=new Array();
         I[11][3][0]=new Array('Um computador que utiliza todos os seus recursos exclusivamente para fornecer servi\u00E7os de rede.','',0,0,1);
         I[11][3][1]=new Array('Um servidor que n\u00E3o est\u00E1 sempre ligado ou dispon\u00EDvel para os usu\u00E1rios na rede.','',0,0,1);
         I[11][3][2]=new Array('Um dispositivo que n\u00E3o pode compartilhar seus recursos com outros dispositivos na rede.','',0,0,1);
         I[11][3][3]=new Array('Um dispositivo que oferece um servi\u00E7o espec\u00EDfico na rede, como compartilhamento de arquivos ou impressoras, por exemplo.','',1,100,1);
         I[12]=new Array();I[12][0]=100;
         I[12][1]='';
         I[12][2]='0';
         I[12][3]=new Array();
         I[12][3][0]=new Array('Servidor dedicado, com um \u00FAnico servidor centralizado para todos os servi\u00E7os.','',0,0,1);
         I[12][3][1]=new Array('Ponto-Servidor, onde cada dispositivo est\u00E1 conectado a v\u00E1rios outros dispositivos e equipamentos de Rede.','',0,0,1);
         I[12][3][2]=new Array('Ponto-a-ponto, com dispositivos compartilhando recursos igualmente.','',0,0,1);
         I[12][3][3]=new Array('Cliente-Servidor, com servidores fornecendo recursos para os clientes na rede.','',1,100,1);
         I[13]=new Array();I[13][0]=100;
         I[13][1]='';
         I[13][2]='0';
         I[13][3]=new Array();
         I[13][3][0]=new Array('Uma esta\u00E7\u00E3o de trabalho que participa ativamente da rede, apenas recebendo atualiza\u00E7\u00F5es importantes via Microsoft Windows.','',0,0,1);
         I[13][3][1]=new Array('Um computador que oferece recursos como armazenamento, impressoras e outros recursos para outros na rede.','',1,100,1);
         I[13][3][2]=new Array('Um dispositivo que apenas acessa a internet sem compartilhar recursos.','',0,0,1);
         I[13][3][3]=new Array('Um computador que utiliza os recursos dispon\u00EDveis na rede sem oferecer nenhum.','',0,0,1);
         I[14]=new Array();I[14][0]=100;
         I[14][1]='';
         I[14][2]='0';
         I[14][3]=new Array();
         I[14][3][0]=new Array('Requisitos mais rigorosos de desempenho, seguran\u00E7a e gerenciamento.','',1,100,1);
         I[14][3][1]=new Array('A capacidade de operar sem a necessidade de servidores ou clientes definidos.','',0,0,1);
         I[14][3][2]=new Array('Requisitos menos rigorosos de desempenho, seguran\u00E7a e gerenciamento.','',0,0,1);
         I[14][3][3]=new Array('A necessidade de uma equipe de TI especializada para gest\u00E3o devido \u00E0 sua simplicidade.','',0,0,1);
         I[15]=new Array();I[15][0]=100;
         I[15][1]='';
         I[15][2]='0';
         I[15][3]=new Array();
         I[15][3][0]=new Array('Uma rede que n\u00E3o permite a troca de informa\u00E7\u00F5es e recursos entre computadores, sendo usada apenas para acesso \u00E0 internet.','',0,0,1);
         I[15][3][1]=new Array('Uma rede de \u00E1rea local que conecta computadores para troca de dados, geralmente limitada a uma \u00E1rea geogr\u00E1fica pequena.','',1,100,1);
         I[15][3][2]=new Array('Uma rede que cobre grandes dist\u00E2ncias, conectando computadores em diferentes pa\u00EDses.','',0,0,1);
         I[15][3][3]=new Array('Uma rede destinada exclusivamente \u00E0 conex\u00E3o de dispositivos m\u00F3veis, como smartphones e tablets.','',0,0,1);
         I[16]=new Array();I[16][0]=100;
         I[16][1]='';
         I[16][2]='0';
         I[16][3]=new Array();
         I[16][3][0]=new Array('Conecta dispositivos apenas via conex\u00F5es por sat\u00E9lite, limitando seu uso a \u00E1reas externas.','',0,0,1);
         I[16][3][1]=new Array('Utiliza cabeamento extenso para interligar dispositivos em uma \u00E1rea geogr\u00E1fica ampla.','',0,0,1);
         I[16][3][2]=new Array('Depende de linhas telef\u00F4nicas para conectar dispositivos dentro de uma \u00E1rea local.','',0,0,1);
         I[16][3][3]=new Array('Usa ondas de r\u00E1dio para conectar dispositivos entre si e \u00E0 Internet, sem necessidade de cabeamento.','',1,100,1);
         I[17]=new Array();I[17][0]=100;
         I[17][1]='';
         I[17][2]='0';
         I[17][3]=new Array();
         I[17][3][0]=new Array('Utiliza exclusivamente redes celulares para conectar dispositivos pessoais, independentemente da proximidade f\u00EDsica.','',0,0,1);
         I[17][3][1]=new Array('Requer instala\u00E7\u00F5es f\u00EDsicas complexas e cabeamento extensivo para conectar dispositivos em ambientes corporativos.','',0,0,1);
         I[17][3][2]=new Array('Conecta dispositivos em uma \u00E1rea extensa, como uma cidade ou um campus universit\u00E1rio, usando fibra \u00F3ptica.','',0,0,1);
         I[17][3][3]=new Array('Liga aparelhos de uso pessoal em uma \u00E1rea geogr\u00E1fica de at\u00E9 10 metros, frequentemente atrav\u00E9s de tecnologia sem fio como Bluetooth.','',1,100,1);
         I[18]=new Array();I[18][0]=100;
         I[18][1]='';
         I[18][2]='0';
         I[18][3]=new Array();
         I[18][3][0]=new Array('Fornecer conex\u00F5es de internet de alta velocidade exclusivamente para \u00E1reas rurais e remotas.','',0,0,1);
         I[18][3][1]=new Array('Estabelecer conex\u00F5es globais, interligando continentes atrav\u00E9s de cabos submarinos e sat\u00E9lites.','',0,0,1);
         I[18][3][2]=new Array('Interligar sistemas e LANs em cidades pr\u00F3ximas ou dentro de uma regi\u00E3o metropolitana, com alcance maior que LANs mas com custo similar.','',1,100,1);
         I[18][3][3]=new Array('Conectar dispositivos pessoais em um alcance limitado, usando principalmente conex\u00F5es com fio.','',0,0,1);
         I[19]=new Array();I[19][0]=100;
         I[19][1]='';
         I[19][2]='0';
         I[19][3]=new Array();
         I[19][3][0]=new Array('Abranger uma grande \u00E1rea geogr\u00E1fica, como um pa\u00EDs ou continente, permitindo a comunica\u00E7\u00E3o de longa dist\u00E2ncia entre redes.','',1,100,1);
         I[19][3][1]=new Array('Interligar computadores pessoais em uma \u00E1rea de at\u00E9 10 metros, geralmente atrav\u00E9s de tecnologia Bluetooth.','',0,0,1);
         I[19][3][2]=new Array('Conectar dispositivos dentro de uma \u00FAnica resid\u00EAncia ou pr\u00E9dio usando principalmente conex\u00F5es com fio.','',0,0,1);
         I[19][3][3]=new Array('Cobrir uma \u00E1rea metropolitana espec\u00EDfica, como uma cidade ou regi\u00E3o, conectando sistemas e LANs locais.','',0,0,1);
         I[20]=new Array();I[20][0]=100;
         I[20][1]='';
         I[20][2]='0';
         I[20][3]=new Array();
         I[20][3][0]=new Array('O m\u00E9todo utilizado para proteger os dados transmitidos na rede contra acesso n\u00E3o autorizado.','',0,0,1);
         I[20][3][1]=new Array('O tipo de software utilizado para gerenciar a comunica\u00E7\u00E3o entre os computadores na rede.','',0,0,1);
         I[20][3][2]=new Array('A quantidade de dados que pode ser transmitida atrav\u00E9s da rede em um determinado per\u00EDodo de tempo.','',0,0,1);
         I[20][3][3]=new Array('A organiza\u00E7\u00E3o dos computadores e outros componentes na rede, podendo ser f\u00EDsica ou l\u00F3gica.','',1,100,1);
         I[21]=new Array();I[21][0]=100;
         I[21][1]='';
         I[21][2]='0';
         I[21][3]=new Array();
         I[21][3][0]=new Array('A topologia f\u00EDsica foca na seguran\u00E7a da rede, enquanto a topologia l\u00F3gica foca na efici\u00EAncia da transmiss\u00E3o de dados.','',0,0,1);
         I[21][3][1]=new Array('A topologia f\u00EDsica \u00E9 determinada pelo software, e a topologia l\u00F3gica \u00E9 determinada pelo hardware.','',0,0,1);
         I[21][3][2]=new Array('A topologia f\u00EDsica se refere ao n\u00FAmero de computadores na rede, enquanto a l\u00F3gica se refere ao tipo de conex\u00E3o \u00E0 internet.','',0,0,1);
         I[21][3][3]=new Array('A topologia f\u00EDsica descreve o layout real e as conex\u00F5es f\u00EDsicas, enquanto a l\u00F3gica descreve como os dados fluem independentemente das conex\u00F5es f\u00EDsicas.','',1,100,1);
         I[22]=new Array();I[22][0]=100;
         I[22][1]='';
         I[22][2]='0';
         I[22][3]=new Array();
         I[22][3][0]=new Array('Influenciando fatores cr\u00EDticos como flexibilidade, velocidade e seguran\u00E7a da rede.','',1,100,1);
         I[22][3][1]=new Array('Modificando o software de gerenciamento de rede para otimizar o fluxo de dados.','',0,0,1);
         I[22][3][2]=new Array('Alterando os protocolos de comunica\u00E7\u00E3o usados para transmitir dados.','',0,0,1);
         I[22][3][3]=new Array('Variando o n\u00FAmero de usu\u00E1rios que podem acessar a rede simultaneamente.','',0,0,1);
         
         
         function StartUp(){
         
         //If there's only one question, no need for question navigation controls
         	if (QsToShow < 2){
         		document.getElementById('QNav').style.display = 'none';
         	}
         	
         //Stash the instructions so they can be redisplayed
         	strInstructions = document.getElementById('InstructionsDiv').innerHTML;
         	
         
         	
         
         	
         
         	
         	CompleteEmptyFeedback();
         
         	SetUpQuestions();
         	ClearTextBoxes();
         	CreateStatusArray();
         	
         
         	
         //Check search string for q parameter
         	if (document.location.search.length > 0){
         		if (ShuffleQs == false){
         			var JumpTo = parseInt(document.location.search.substring(1,document.location.search.length))-1;
         			if (JumpTo <= QsToShow){
         				ChangeQ(JumpTo);
         			}
         		}
         	}
         //Undocumented function added 10/12/2004
         	ShowSpecialReadingForQuestion();
         }
         
         function ShowHideQuestions(){
         	document.getElementById('ShowMethodButton').style.display = 'none';
         	if (ShowingAllQuestions == false){
         		for (var i=0; i<QArray.length; i++){
         				QArray[i].style.display = '';
         			}
         		document.getElementById('Questions').style.listStyleType = 'decimal';
         		document.getElementById('OneByOneReadout').style.display = 'none';
         		document.getElementById('ShowMethodButton').innerHTML = ShowOneByOneCaption;
         		ShowingAllQuestions = true;
         	}
         	else{
         		for (var i=0; i<QArray.length; i++){
         				if (i != CurrQNum){
         					QArray[i].style.display = 'none';
         				}
         			}
         		document.getElementById('Questions').style.listStyleType = 'none';
         		document.getElementById('OneByOneReadout').style.display = '';
         		document.getElementById('ShowMethodButton').innerHTML = ShowAllQuestionsCaption;
         		ShowingAllQuestions = false;	
         	}
         	document.getElementById('ShowMethodButton').style.display = 'inline';
         }
         
         function CreateStatusArray(){
         	var QNum, ANum;
         //For each item in the item array
         	for (QNum=0; QNum<I.length; QNum++){
         //Check if the question still exists (hasn't been nuked by showing a random selection)
         		if (document.getElementById('Q_' + QNum) != null){
         			State[QNum] = new Array();
         			State[QNum][0] = -1; //Score for this q; -1 shows question not done yet
         			State[QNum][1] = new Array(); //answers
         			for (ANum = 0; ANum<I[QNum][3].length; ANum++){
         				State[QNum][1][ANum] = 0; //answer not chosen yet; when chosen, will store its position in the series of choices
         			}
         			State[QNum][2] = 0; //tries at this q so far
         			State[QNum][3] = 0; //incrementing percent-correct values of selected answers
         			State[QNum][4] = 0; //penalties incurred for hints
         			State[QNum][5] = ''; //Sequence of answers chosen by number
         		}
         		else{
         			State[QNum] = null;
         		}
         	}
         }
         
         
         
         function CheckMCAnswer(QNum, ANum, Btn){
         //if question doesn't exist, bail
         	if (State[QNum].length < 1){return;}
         	
         //Get the feedback
         	Feedback = I[QNum][3][ANum][1];
         	
         //Now show feedback and bail if question already complete
         	if (State[QNum][0] > -1){
         //Add an extra message explaining that the question
         // is finished if defined by the user
         		if (strQuestionFinished.length > 0){Feedback += '<br />' + strQuestionFinished;}
         //Show the feedback
         		ShowMessage(Feedback);
         //New for 6.2.2.1: If you want to mark an answer as correct even when it's the final choice, uncomment this line.
         //		if (I[QNum][3][ANum][2] >= 1){Btn.innerHTML = CorrectIndicator;}else{Btn.innerHTML = IncorrectIndicator;}	
         		return;
         	}
         	
         //Hide the button while processing
         	Btn.style.display = 'none';
         
         //Increment the number of tries
         	State[QNum][2]++;
         	
         //Add the percent-correct value of this answer
         	State[QNum][3] += I[QNum][3][ANum][3];
         	
         //Store the try number in the answer part of the State array, for tracking purposes
         	State[QNum][1][ANum] = State[QNum][2];
         	if (State[QNum][5].length > 0){State[QNum][5] += ' | ';}
         	State[QNum][5] += String.fromCharCode(65+ANum);
         	
         //Should this answer be accepted as correct?
         	if (I[QNum][3][ANum][2] < 1){
         //It's wrong
         
         //Mark the answer
         		Btn.innerHTML = IncorrectIndicator;
         		
         //Remove any previous score unless exercise is finished (6.0.3.8+)
         		if (Finished == false){
         			WriteToInstructions(strInstructions);
         		}	
         		
         //Check whether this leaves just one MC answer unselected, in which case the Q is terminated
         		var RemainingAnswer = FinalAnswer(QNum);
         		if (RemainingAnswer > -1){
         //Behave as if the last answer had been selected, but give no credit for it
         //Increment the number of tries
         			State[QNum][2]++;		
         		
         //Calculate the score for this question
         			CalculateMCQuestionScore(QNum);
         			
         //Get the overall score and add it to the feedback
         			CalculateOverallScore();
         //New for 6.2.2.1
         			var QsDone = CheckQuestionsCompleted();
         			if ((ContinuousScoring == true)||(Finished == true)){
         				Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
         				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
         			}
         			else{
         				WriteToInstructions(QsDone);
         			}
         		}
         	}
         	else{
         //It's right
         //Mark the answer
         		Btn.innerHTML = CorrectIndicator;
         				
         //Calculate the score for this question
         		CalculateMCQuestionScore(QNum);
         		
         //New for 6.2.2.0
         		var QsDone = CheckQuestionsCompleted();
         
         //Get the overall score and add it to the feedback
         		if (ContinuousScoring == true){
         			CalculateOverallScore();
         			if ((ContinuousScoring == true)||(Finished == true)){
         				Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
         				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
         			}
         		}
         		else{
         			WriteToInstructions(QsDone);
         		}
         	}
         	
         //Show the button again
         	Btn.style.display = 'inline';
         	
         //Finally, show the feedback	
         	ShowMessage(Feedback);
         	
         //Check whether all questions are now done
         	CheckFinished();
         }
         
         function CalculateMCQuestionScore(QNum){
         	var Tries = State[QNum][2] + State[QNum][4]; //include tries and hint penalties
         	var PercentCorrect = State[QNum][3];
         	var TotAns = GetTotalMCAnswers(QNum);
         	var HintPenalties = State[QNum][4];
         	
         //Make sure it's not already complete
         
         	if (State[QNum][0] < 0){
         //Allow for Hybrids
         		if (HintPenalties >= 1){
         			State[QNum][0] = 0;
         		}
         		else{
         //This line calculates the score for this question
         			if (TotAns == 1){
         				State[QNum][0] = 1;
         			}
         			else{
         				State[QNum][0] = ((TotAns-((Tries*100)/State[QNum][3]))/(TotAns-1));
         			}
         		}
         //Fix for Safari bug added for version 6.0.3.42 (negative infinity problem)
         		if ((State[QNum][0] < 0)||(State[QNum][0] == Number.NEGATIVE_INFINITY)){
         			State[QNum][0] = 0;
         		}
         	}
         }
         
         function GetTotalMCAnswers(QNum){
         	var Result = 0;
         	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
         		if (I[QNum][3][ANum][4] == 1){ //This is an MC answer
         			Result++;
         		}
         	}
         	return Result;
         }
         
         function FinalAnswer(QNum){
         	var UnchosenAnswers = 0;
         	var FinalAnswer = -1;
         	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
         		if (I[QNum][3][ANum][4] == 1){ //This is an MC answer
         			if (State[QNum][1][ANum] < 1){ //This answer hasn't been chosen yet
         				UnchosenAnswers++;
         				FinalAnswer = ANum;
         			}
         		}
         	}
         	if (UnchosenAnswers == 1){
         		return FinalAnswer;
         	}
         	else{
         		return -1;
         	}
         }
         
         
         
         
         
         function CalculateOverallScore(){
         	var TotalWeighting = 0;
         	var TotalScore = 0;
         	
         	for (var QNum=0; QNum<State.length; QNum++){
         		if (State[QNum] != null){
         			if (State[QNum][0] > -1){
         				TotalWeighting += I[QNum][0];
         				TotalScore += (I[QNum][0] * State[QNum][0]);
         			}
         		}
         	}
         	if (TotalWeighting > 0){
         		Score = Math.floor((TotalScore/TotalWeighting)*100);
         	}
         	else{
         //if TotalWeighting is 0, no questions so far have any value, so 
         //no penalty should be shown.
         		Score = 100; 
         	}
         }
         
         //New for 6.2.2.0
         function CheckQuestionsCompleted(){
         	if (ShowCompletedSoFar == false){return '';}
         	var QsCompleted = 0;
         	for (var QNum=0; QNum<State.length; QNum++){
         		if (State[QNum] != null){
         			if (State[QNum][0] >= 0){
         				QsCompleted++;
         			}
         		}
         	}
         //Fixes for 6.2.2.2
         	if (QsCompleted >= QArray.length){
         		return ExerciseCompleted;
         	}
         	else{
         		return CompletedSoFar + ' ' + QsCompleted + '/' + QArray.length + '.';
         	}
         }
         
         function CheckFinished(){
         	var FB = '';
         	var AllDone = true;
         	for (var QNum=0; QNum<State.length; QNum++){
         		if (State[QNum] != null){
         			if (State[QNum][0] < 0){
         				AllDone = false;
         			}
         		}
         	}
         	if (AllDone == true){
         	
         //Report final score and submit if necessary
         		CalculateOverallScore();
         		FB = YourScoreIs + ' ' + Score + '%.';
         		if (ShowCorrectFirstTime == true){
         			var CFT = 0;
         			for (QNum=0; QNum<State.length; QNum++){
         				if (State[QNum] != null){
         					if (State[QNum][0] >= 1){
         						CFT++;
         					}
         				}
         			}
         			FB += '<br />' + CorrectFirstTime + ' ' + CFT + '/' + QsToShow;
         		}
         		
         //New for 6.2.2.0
         		FB += '<br />' + ExerciseCompleted;
         		
         		WriteToInstructions(FB);
         		
         		Finished == true;
         
         
         
         
         		TimeOver = true;
         		Locked = true;
         		
         
         
         		Finished = true;
         		Detail = '<?xml version="1.0"?><hpnetresult><fields>';
         		for (QNum=0; QNum<State.length; QNum++){
         			if (State[QNum] != null){
         				if (State[QNum][5].length > 0){
         					Detail += '<field><fieldname>Question #' + (QNum+1) + '</fieldname><fieldtype>question-tracking</fieldtype><fieldlabel>Q ' + (QNum+1) + '</fieldlabel><fieldlabelid>QuestionTrackingField</fieldlabelid><fielddata>' + State[QNum][5] + '</fielddata></field>';
         				}
         			}
         		}
         		Detail += '</fields></hpnetresult>';
         	}
         
         }
         
         
         
         
         
         
         
         
         
         
         //-->
         
         //]]>
         
      </script>
   </head>
   <body onload="StartUp()" id="TheBody" >
      <!-- BeginTopNavButtons 
      <div class="NavButtonBar" id="TopNavBar">
         <button class="NavButton" onclick="location='contents.htm'; return false;"> Index </button>
         <button class="NavButton" onclick="location='nextpage.htm'; return false;">=&gt;</button>
      </div>-->
      <!-- EndTopNavButtons -->
      <div class="Titles">
		<img src="logo.png" width="200">
         <h2 class="ExerciseTitle">Quiz - Arquitetura de Redes com IoT</h2>
         <!--<h3 class="ExerciseSubtitle">Quiz</h3>-->
      </div>
      <div id="InstructionsDiv" class="StdDiv">
         <div id="Instructions"></div>
      </div>
      <div id="ContainerDiv">
         <div class="ExerciseContainer">
            <div id="QNav" class="QuestionNavigation">
               <p style="text-align: right;">
                  <button id="ShowMethodButton" class="FuncButton" onclick="ShowHideQuestions(); return false;">Mostrar Todas as questões</button>
               </p>
               <div id="OneByOneReadout">
                  <button id="PrevQButton" class="FuncButton" onclick="ChangeQ(-1); return false;">&lt;=</button>
                  <span id="QNumReadout" class="QNum">&#160;</span>
                  <button id="NextQButton" class="FuncButton" onclick="ChangeQ(1); return false;">=&gt;</button>
                  <br />
               </div>
            </div>
            <ol class="QuizQuestions" id="Questions">
               <li class="QuizQuestion" id="Q_0" style="display: none;">
                  <div class="QuestionText">O que permite a forma&#x00E7;&#x00E3;o de uma rede de computadores?</div>
                  <ol class="MCAnswers">
                     <li id="Q_0_0"><button class="FuncButton" id="Q_0_0_Btn" onclick="CheckMCAnswer(0,0,this)">?</button>&#160;&#160;A presen&#x00E7;a de um sistema operacional avan&#x00E7;ado.</li>
                     <li id="Q_0_1"><button class="FuncButton" id="Q_0_1_Btn" onclick="CheckMCAnswer(0,1,this)">?</button>&#160;&#160;A capacidade de armazenamento de cada computador.</li>
                     <li id="Q_0_2"><button class="FuncButton" id="Q_0_2_Btn" onclick="CheckMCAnswer(0,2,this)">?</button>&#160;&#160;A conex&#x00E3;o entre computadores para envio e recebimento de dados.</li>
                     <li id="Q_0_3"><button class="FuncButton" id="Q_0_3_Btn" onclick="CheckMCAnswer(0,3,this)">?</button>&#160;&#160;A velocidade de processamento do computador.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_1" style="display: none;">
                  <div class="QuestionText">Quais usu&#x00E1;rios podem se beneficiar com a conex&#x00E3;o em rede de computadores?</div>
                  <ol class="MCAnswers">
                     <li id="Q_1_0"><button class="FuncButton" id="Q_1_0_Btn" onclick="CheckMCAnswer(1,0,this)">?</button>&#160;&#160;Usu&#x00E1;rios que possuem pelo menos dois computadores, como um desktop e um laptop por exemplo.</li>
                     <li id="Q_1_1"><button class="FuncButton" id="Q_1_1_Btn" onclick="CheckMCAnswer(1,1,this)">?</button>&#160;&#160;Apenas usu&#x00E1;rios corporativos com grande n&#x00FA;mero de computadores.</li>
                     <li id="Q_1_2"><button class="FuncButton" id="Q_1_2_Btn" onclick="CheckMCAnswer(1,2,this)">?</button>&#160;&#160;Apenas usu&#x00E1;rios que navegam na internet.</li>
                     <li id="Q_1_3"><button class="FuncButton" id="Q_1_3_Btn" onclick="CheckMCAnswer(1,3,this)">?</button>&#160;&#160;Apenas usu&#x00E1;rios com computadores de alta performance.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_2" style="display: none;">
                  <div class="QuestionText">No contexto da tecnologia da informa&#x00E7;&#x00E3;o, o que a palavra "arquitetura" geralmente se refere?</div>
                  <ol class="MCAnswers">
                     <li id="Q_2_0"><button class="FuncButton" id="Q_2_0_Btn" onclick="CheckMCAnswer(2,0,this)">?</button>&#160;&#160;&#x00C0;s instru&#x00E7;&#x00F5;es de programa&#x00E7;&#x00E3;o espec&#x00ED;ficas de um software.</li>
                     <li id="Q_2_1"><button class="FuncButton" id="Q_2_1_Btn" onclick="CheckMCAnswer(2,1,this)">?</button>&#160;&#160;&#x00C0; est&#x00E9;tica visual de interfaces de usu&#x00E1;rio.</li>
                     <li id="Q_2_2"><button class="FuncButton" id="Q_2_2_Btn" onclick="CheckMCAnswer(2,2,this)">?</button>&#160;&#160;Ao design f&#x00ED;sico dos dispositivos de hardware.</li>
                     <li id="Q_2_3"><button class="FuncButton" id="Q_2_3_Btn" onclick="CheckMCAnswer(2,3,this)">?</button>&#160;&#160;&#x00C0; estrutura geral de um sistema de software ou hardware.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_3" style="display: none;">
                  <div class="QuestionText">Qual a principal fun&#x00E7;&#x00E3;o da arquitetura em um sistema de tecnologia da informa&#x00E7;&#x00E3;o?</div>
                  <ol class="MCAnswers">
                     <li id="Q_3_0"><button class="FuncButton" id="Q_3_0_Btn" onclick="CheckMCAnswer(3,0,this)">?</button>&#160;&#160;Estabelecer as normas de seguran&#x00E7;a para os sistemas.</li>
                     <li id="Q_3_1"><button class="FuncButton" id="Q_3_1_Btn" onclick="CheckMCAnswer(3,1,this)">?</button>&#160;&#160;Descrever a forma como os componentes do sistema se relacionam e funcionam juntos.</li>
                     <li id="Q_3_2"><button class="FuncButton" id="Q_3_2_Btn" onclick="CheckMCAnswer(3,2,this)">?</button>&#160;&#160;Definir as pol&#x00ED;ticas de uso para os usu&#x00E1;rios do sistema.</li>
                     <li id="Q_3_3"><button class="FuncButton" id="Q_3_3_Btn" onclick="CheckMCAnswer(3,3,this)">?</button>&#160;&#160;Descrever a apar&#x00EA;ncia externa dos componentes do sistema.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_4" style="display: none;">
                  <div class="QuestionText">O que caracteriza uma arquitetura de rede ponto-a-ponto (P2P)?</div>
                  <ol class="MCAnswers">
                     <li id="Q_4_0"><button class="FuncButton" id="Q_4_0_Btn" onclick="CheckMCAnswer(4,0,this)">?</button>&#160;&#160;A necessidade de configura&#x00E7;&#x00F5;es complexas e t&#x00E9;cnicas avan&#x00E7;adas para sua implementa&#x00E7;&#x00E3;o.</li>
                     <li id="Q_4_1"><button class="FuncButton" id="Q_4_1_Btn" onclick="CheckMCAnswer(4,1,this)">?</button>&#160;&#160;A capacidade de cada dispositivo atuar apenas como cliente.</li>
                     <li id="Q_4_2"><button class="FuncButton" id="Q_4_2_Btn" onclick="CheckMCAnswer(4,2,this)">?</button>&#160;&#160;A presen&#x00E7;a de um servidor central que gerencia todos os dados e recursos.</li>
                     <li id="Q_4_3"><button class="FuncButton" id="Q_4_3_Btn" onclick="CheckMCAnswer(4,3,this)">?</button>&#160;&#160;A igualdade de fun&#x00E7;&#x00E3;o entre os dispositivos, podendo agir como cliente ou servidor.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_5" style="display: none;">
                  <div class="QuestionText">Qual &#x00E9; uma vantagem das redes ponto-a-ponto?</div>
                  <ol class="MCAnswers">
                     <li id="Q_5_0"><button class="FuncButton" id="Q_5_0_Btn" onclick="CheckMCAnswer(5,0,this)">?</button>&#160;&#160;Facilidade de implementa&#x00E7;&#x00E3;o e configura&#x00E7;&#x00E3;o pelos pr&#x00F3;prios usu&#x00E1;rios.</li>
                     <li id="Q_5_1"><button class="FuncButton" id="Q_5_1_Btn" onclick="CheckMCAnswer(5,1,this)">?</button>&#160;&#160;Estrutura complexa que suporta grandes volumes de tr&#x00E1;fego de dados.</li>
                     <li id="Q_5_2"><button class="FuncButton" id="Q_5_2_Btn" onclick="CheckMCAnswer(5,2,this)">?</button>&#160;&#160;Alto desempenho em transmiss&#x00F5;es de dados devido &#x00E0; presen&#x00E7;a de um servidor central.</li>
                     <li id="Q_5_3"><button class="FuncButton" id="Q_5_3_Btn" onclick="CheckMCAnswer(5,3,this)">?</button>&#160;&#160;Alta seguran&#x00E7;a e controle centralizado dos dados.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_6" style="display: none;">
                  <div class="QuestionText">Qual &#x00E9; uma desvantagem das redes ponto-a-ponto?</div>
                  <ol class="MCAnswers">
                     <li id="Q_6_0"><button class="FuncButton" id="Q_6_0_Btn" onclick="CheckMCAnswer(6,0,this)">?</button>&#160;&#160;A incapacidade de compartilhar arquivos e recursos entre dispositivos.</li>
                     <li id="Q_6_1"><button class="FuncButton" id="Q_6_1_Btn" onclick="CheckMCAnswer(6,1,this)">?</button>&#160;&#160;A vulnerabilidade &#x00E0; seguran&#x00E7;a, devido &#x00E0; falta de um gerenciamento centralizado.</li>
                     <li id="Q_6_2"><button class="FuncButton" id="Q_6_2_Btn" onclick="CheckMCAnswer(6,2,this)">?</button>&#160;&#160;A alta complexidade para usu&#x00E1;rios comuns configurarem a rede.</li>
                     <li id="Q_6_3"><button class="FuncButton" id="Q_6_3_Btn" onclick="CheckMCAnswer(6,3,this)">?</button>&#160;&#160;A necessidade de hardware especializado e caro.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_7" style="display: none;">
                  <div class="QuestionText">O que define uma arquitetura de rede Cliente-Servidor?</div>
                  <ol class="MCAnswers">
                     <li id="Q_7_0"><button class="FuncButton" id="Q_7_0_Btn" onclick="CheckMCAnswer(7,0,this)">?</button>&#160;&#160;Um sistema em que os clientes fornecem recursos uns aos outros sem a necessidade de um servidor central.</li>
                     <li id="Q_7_1"><button class="FuncButton" id="Q_7_1_Btn" onclick="CheckMCAnswer(7,1,this)">?</button>&#160;&#160;Uma configura&#x00E7;&#x00E3;o onde cada dispositivo &#x00E9; independente e n&#x00E3;o h&#x00E1; servidores ou clientes.</li>
                     <li id="Q_7_2"><button class="FuncButton" id="Q_7_2_Btn" onclick="CheckMCAnswer(7,2,this)">?</button>&#160;&#160;Uma estrutura em que um servidor centralizado atende a v&#x00E1;rios clientes, fornecendo diversos servi&#x00E7;os.</li>
                     <li id="Q_7_3"><button class="FuncButton" id="Q_7_3_Btn" onclick="CheckMCAnswer(7,3,this)">?</button>&#160;&#160;Uma rede em que todos os computadores agem como servidores e clientes simultaneamente.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_8" style="display: none;">
                  <div class="QuestionText">Qual &#x00E9; uma vantagem da arquitetura de rede Cliente-Servidor?</div>
                  <ol class="MCAnswers">
                     <li id="Q_8_0"><button class="FuncButton" id="Q_8_0_Btn" onclick="CheckMCAnswer(8,0,this)">?</button>&#160;&#160;A independ&#x00EA;ncia dos clientes, que n&#x00E3;o precisam de um servidor para comunica&#x00E7;&#x00E3;o.</li>
                     <li id="Q_8_1"><button class="FuncButton" id="Q_8_1_Btn" onclick="CheckMCAnswer(8,1,this)">?</button>&#160;&#160;A facilidade de configura&#x00E7;&#x00E3;o e manuten&#x00E7;&#x00E3;o por usu&#x00E1;rios leigos.</li>
                     <li id="Q_8_2"><button class="FuncButton" id="Q_8_2_Btn" onclick="CheckMCAnswer(8,2,this)">?</button>&#160;&#160;A capacidade de funcionar eficientemente sem um servidor central.</li>
                     <li id="Q_8_3"><button class="FuncButton" id="Q_8_3_Btn" onclick="CheckMCAnswer(8,3,this)">?</button>&#160;&#160;O controle centralizado dos recursos da rede e maior seguran&#x00E7;a.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_9" style="display: none;">
                  <div class="QuestionText">Qual &#x00E9; uma desvantagem da arquitetura de rede Cliente-Servidor?</div>
                  <ol class="MCAnswers">
                     <li id="Q_9_0"><button class="FuncButton" id="Q_9_0_Btn" onclick="CheckMCAnswer(9,0,this)">?</button>&#160;&#160;A depend&#x00EA;ncia da rede em rela&#x00E7;&#x00E3;o &#x00E0; disponibilidade e desempenho do servidor central.</li>
                     <li id="Q_9_1"><button class="FuncButton" id="Q_9_1_Btn" onclick="CheckMCAnswer(9,1,this)">?</button>&#160;&#160;A alta vulnerabilidade &#x00E0; seguran&#x00E7;a devido &#x00E0; falta de um servidor central.</li>
                     <li id="Q_9_2"><button class="FuncButton" id="Q_9_2_Btn" onclick="CheckMCAnswer(9,2,this)">?</button>&#160;&#160;A incapacidade de compartilhar arquivos e recursos diretamente entre os clientes.</li>
                     <li id="Q_9_3"><button class="FuncButton" id="Q_9_3_Btn" onclick="CheckMCAnswer(9,3,this)">?</button>&#160;&#160;A complexidade na configura&#x00E7;&#x00E3;o inicial da rede.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_10" style="display: none;">
                  <div class="QuestionText">Qual &#x00E9; a arquitetura predominante nas redes dom&#x00E9;sticas ou de pequenas empresas?</div>
                  <ol class="MCAnswers">
                     <li id="Q_10_0"><button class="FuncButton" id="Q_10_0_Btn" onclick="CheckMCAnswer(10,0,this)">?</button>&#160;&#160;Hier&#x00E1;rquica, com v&#x00E1;rios n&#x00ED;veis de servidores e clientes.</li>
                     <li id="Q_10_1"><button class="FuncButton" id="Q_10_1_Btn" onclick="CheckMCAnswer(10,1,this)">?</button>&#160;&#160;Servidor dedicado, com um dispositivo espec&#x00ED;fico designado para cada servi&#x00E7;o na rede.</li>
                     <li id="Q_10_2"><button class="FuncButton" id="Q_10_2_Btn" onclick="CheckMCAnswer(10,2,this)">?</button>&#160;&#160;Ponto-a-ponto, onde todos os dispositivos t&#x00EA;m o mesmo status e podem compartilhar recursos.</li>
                     <li id="Q_10_3"><button class="FuncButton" id="Q_10_3_Btn" onclick="CheckMCAnswer(10,3,this)">?</button>&#160;&#160;Cliente-Servidor, com um servidor centralizado gerenciando todos os recursos.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_11" style="display: none;">
                  <div class="QuestionText">O que &#x00E9; um servidor n&#x00E3;o dedicado em uma rede dom&#x00E9;stica ou de pequena empresa?</div>
                  <ol class="MCAnswers">
                     <li id="Q_11_0"><button class="FuncButton" id="Q_11_0_Btn" onclick="CheckMCAnswer(11,0,this)">?</button>&#160;&#160;Um computador que utiliza todos os seus recursos exclusivamente para fornecer servi&#x00E7;os de rede.</li>
                     <li id="Q_11_1"><button class="FuncButton" id="Q_11_1_Btn" onclick="CheckMCAnswer(11,1,this)">?</button>&#160;&#160;Um servidor que n&#x00E3;o est&#x00E1; sempre ligado ou dispon&#x00ED;vel para os usu&#x00E1;rios na rede.</li>
                     <li id="Q_11_2"><button class="FuncButton" id="Q_11_2_Btn" onclick="CheckMCAnswer(11,2,this)">?</button>&#160;&#160;Um dispositivo que n&#x00E3;o pode compartilhar seus recursos com outros dispositivos na rede.</li>
                     <li id="Q_11_3"><button class="FuncButton" id="Q_11_3_Btn" onclick="CheckMCAnswer(11,3,this)">?</button>&#160;&#160;Um dispositivo que oferece um servi&#x00E7;o espec&#x00ED;fico na rede, como compartilhamento de arquivos ou impressoras, por exemplo.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_12" style="display: none;">
                  <div class="QuestionText">Qual &#x00E9; a arquitetura predominante nas redes corporativas de empresas de m&#x00E9;dio e grande porte?</div>
                  <ol class="MCAnswers">
                     <li id="Q_12_0"><button class="FuncButton" id="Q_12_0_Btn" onclick="CheckMCAnswer(12,0,this)">?</button>&#160;&#160;Servidor dedicado, com um &#x00FA;nico servidor centralizado para todos os servi&#x00E7;os.</li>
                     <li id="Q_12_1"><button class="FuncButton" id="Q_12_1_Btn" onclick="CheckMCAnswer(12,1,this)">?</button>&#160;&#160;Ponto-Servidor, onde cada dispositivo est&#x00E1; conectado a v&#x00E1;rios outros dispositivos e equipamentos de Rede.</li>
                     <li id="Q_12_2"><button class="FuncButton" id="Q_12_2_Btn" onclick="CheckMCAnswer(12,2,this)">?</button>&#160;&#160;Ponto-a-ponto, com dispositivos compartilhando recursos igualmente.</li>
                     <li id="Q_12_3"><button class="FuncButton" id="Q_12_3_Btn" onclick="CheckMCAnswer(12,3,this)">?</button>&#160;&#160;Cliente-Servidor, com servidores fornecendo recursos para os clientes na rede.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_13" style="display: none;">
                  <div class="QuestionText">O que caracteriza um servidor em uma rede corporativa?</div>
                  <ol class="MCAnswers">
                     <li id="Q_13_0"><button class="FuncButton" id="Q_13_0_Btn" onclick="CheckMCAnswer(13,0,this)">?</button>&#160;&#160;Uma esta&#x00E7;&#x00E3;o de trabalho que participa ativamente da rede, apenas recebendo atualiza&#x00E7;&#x00F5;es importantes via Microsoft Windows.</li>
                     <li id="Q_13_1"><button class="FuncButton" id="Q_13_1_Btn" onclick="CheckMCAnswer(13,1,this)">?</button>&#160;&#160;Um computador que oferece recursos como armazenamento, impressoras e outros recursos para outros na rede.</li>
                     <li id="Q_13_2"><button class="FuncButton" id="Q_13_2_Btn" onclick="CheckMCAnswer(13,2,this)">?</button>&#160;&#160;Um dispositivo que apenas acessa a internet sem compartilhar recursos.</li>
                     <li id="Q_13_3"><button class="FuncButton" id="Q_13_3_Btn" onclick="CheckMCAnswer(13,3,this)">?</button>&#160;&#160;Um computador que utiliza os recursos dispon&#x00ED;veis na rede sem oferecer nenhum.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_14" style="display: none;">
                  <div class="QuestionText">Qual &#x00E9; uma caracter&#x00ED;stica essencial das redes corporativas em compara&#x00E7;&#x00E3;o com as redes dom&#x00E9;sticas?</div>
                  <ol class="MCAnswers">
                     <li id="Q_14_0"><button class="FuncButton" id="Q_14_0_Btn" onclick="CheckMCAnswer(14,0,this)">?</button>&#160;&#160;Requisitos mais rigorosos de desempenho, seguran&#x00E7;a e gerenciamento.</li>
                     <li id="Q_14_1"><button class="FuncButton" id="Q_14_1_Btn" onclick="CheckMCAnswer(14,1,this)">?</button>&#160;&#160;A capacidade de operar sem a necessidade de servidores ou clientes definidos.</li>
                     <li id="Q_14_2"><button class="FuncButton" id="Q_14_2_Btn" onclick="CheckMCAnswer(14,2,this)">?</button>&#160;&#160;Requisitos menos rigorosos de desempenho, seguran&#x00E7;a e gerenciamento.</li>
                     <li id="Q_14_3"><button class="FuncButton" id="Q_14_3_Btn" onclick="CheckMCAnswer(14,3,this)">?</button>&#160;&#160;A necessidade de uma equipe de TI especializada para gest&#x00E3;o devido &#x00E0; sua simplicidade.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_15" style="display: none;">
                  <div class="QuestionText">Qual caracter&#x00ED;stica define uma LAN (Local Area Network) na computa&#x00E7;&#x00E3;o?</div>
                  <ol class="MCAnswers">
                     <li id="Q_15_0"><button class="FuncButton" id="Q_15_0_Btn" onclick="CheckMCAnswer(15,0,this)">?</button>&#160;&#160;Uma rede que n&#x00E3;o permite a troca de informa&#x00E7;&#x00F5;es e recursos entre computadores, sendo usada apenas para acesso &#x00E0; internet.</li>
                     <li id="Q_15_1"><button class="FuncButton" id="Q_15_1_Btn" onclick="CheckMCAnswer(15,1,this)">?</button>&#160;&#160;Uma rede de &#x00E1;rea local que conecta computadores para troca de dados, geralmente limitada a uma &#x00E1;rea geogr&#x00E1;fica pequena.</li>
                     <li id="Q_15_2"><button class="FuncButton" id="Q_15_2_Btn" onclick="CheckMCAnswer(15,2,this)">?</button>&#160;&#160;Uma rede que cobre grandes dist&#x00E2;ncias, conectando computadores em diferentes pa&#x00ED;ses.</li>
                     <li id="Q_15_3"><button class="FuncButton" id="Q_15_3_Btn" onclick="CheckMCAnswer(15,3,this)">?</button>&#160;&#160;Uma rede destinada exclusivamente &#x00E0; conex&#x00E3;o de dispositivos m&#x00F3;veis, como smartphones e tablets.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_16" style="display: none;">
                  <div class="QuestionText">Qual &#x00E9; a principal caracter&#x00ED;stica de uma WLAN (Wireless Local Area Network)?</div>
                  <ol class="MCAnswers">
                     <li id="Q_16_0"><button class="FuncButton" id="Q_16_0_Btn" onclick="CheckMCAnswer(16,0,this)">?</button>&#160;&#160;Conecta dispositivos apenas via conex&#x00F5;es por sat&#x00E9;lite, limitando seu uso a &#x00E1;reas externas.</li>
                     <li id="Q_16_1"><button class="FuncButton" id="Q_16_1_Btn" onclick="CheckMCAnswer(16,1,this)">?</button>&#160;&#160;Utiliza cabeamento extenso para interligar dispositivos em uma &#x00E1;rea geogr&#x00E1;fica ampla.</li>
                     <li id="Q_16_2"><button class="FuncButton" id="Q_16_2_Btn" onclick="CheckMCAnswer(16,2,this)">?</button>&#160;&#160;Depende de linhas telef&#x00F4;nicas para conectar dispositivos dentro de uma &#x00E1;rea local.</li>
                     <li id="Q_16_3"><button class="FuncButton" id="Q_16_3_Btn" onclick="CheckMCAnswer(16,3,this)">?</button>&#160;&#160;Usa ondas de r&#x00E1;dio para conectar dispositivos entre si e &#x00E0; Internet, sem necessidade de cabeamento.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_17" style="display: none;">
                  <div class="QuestionText">Qual &#x00E9; a caracter&#x00ED;stica definidora de uma PAN (Personal Area Network)?</div>
                  <ol class="MCAnswers">
                     <li id="Q_17_0"><button class="FuncButton" id="Q_17_0_Btn" onclick="CheckMCAnswer(17,0,this)">?</button>&#160;&#160;Utiliza exclusivamente redes celulares para conectar dispositivos pessoais, independentemente da proximidade f&#x00ED;sica.</li>
                     <li id="Q_17_1"><button class="FuncButton" id="Q_17_1_Btn" onclick="CheckMCAnswer(17,1,this)">?</button>&#160;&#160;Requer instala&#x00E7;&#x00F5;es f&#x00ED;sicas complexas e cabeamento extensivo para conectar dispositivos em ambientes corporativos.</li>
                     <li id="Q_17_2"><button class="FuncButton" id="Q_17_2_Btn" onclick="CheckMCAnswer(17,2,this)">?</button>&#160;&#160;Conecta dispositivos em uma &#x00E1;rea extensa, como uma cidade ou um campus universit&#x00E1;rio, usando fibra &#x00F3;ptica.</li>
                     <li id="Q_17_3"><button class="FuncButton" id="Q_17_3_Btn" onclick="CheckMCAnswer(17,3,this)">?</button>&#160;&#160;Liga aparelhos de uso pessoal em uma &#x00E1;rea geogr&#x00E1;fica de at&#x00E9; 10 metros, frequentemente atrav&#x00E9;s de tecnologia sem fio como Bluetooth.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_18" style="display: none;">
                  <div class="QuestionText">Qual &#x00E9; a fun&#x00E7;&#x00E3;o principal de uma MAN (Metropolitan Area Network)?</div>
                  <ol class="MCAnswers">
                     <li id="Q_18_0"><button class="FuncButton" id="Q_18_0_Btn" onclick="CheckMCAnswer(18,0,this)">?</button>&#160;&#160;Fornecer conex&#x00F5;es de internet de alta velocidade exclusivamente para &#x00E1;reas rurais e remotas.</li>
                     <li id="Q_18_1"><button class="FuncButton" id="Q_18_1_Btn" onclick="CheckMCAnswer(18,1,this)">?</button>&#160;&#160;Estabelecer conex&#x00F5;es globais, interligando continentes atrav&#x00E9;s de cabos submarinos e sat&#x00E9;lites.</li>
                     <li id="Q_18_2"><button class="FuncButton" id="Q_18_2_Btn" onclick="CheckMCAnswer(18,2,this)">?</button>&#160;&#160;Interligar sistemas e LANs em cidades pr&#x00F3;ximas ou dentro de uma regi&#x00E3;o metropolitana, com alcance maior que LANs mas com custo similar.</li>
                     <li id="Q_18_3"><button class="FuncButton" id="Q_18_3_Btn" onclick="CheckMCAnswer(18,3,this)">?</button>&#160;&#160;Conectar dispositivos pessoais em um alcance limitado, usando principalmente conex&#x00F5;es com fio.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_19" style="display: none;">
                  <div class="QuestionText">Qual &#x00E9; a principal caracter&#x00ED;stica de uma WAN (Wide Area Network)?</div>
                  <ol class="MCAnswers">
                     <li id="Q_19_0"><button class="FuncButton" id="Q_19_0_Btn" onclick="CheckMCAnswer(19,0,this)">?</button>&#160;&#160;Abranger uma grande &#x00E1;rea geogr&#x00E1;fica, como um pa&#x00ED;s ou continente, permitindo a comunica&#x00E7;&#x00E3;o de longa dist&#x00E2;ncia entre redes.</li>
                     <li id="Q_19_1"><button class="FuncButton" id="Q_19_1_Btn" onclick="CheckMCAnswer(19,1,this)">?</button>&#160;&#160;Interligar computadores pessoais em uma &#x00E1;rea de at&#x00E9; 10 metros, geralmente atrav&#x00E9;s de tecnologia Bluetooth.</li>
                     <li id="Q_19_2"><button class="FuncButton" id="Q_19_2_Btn" onclick="CheckMCAnswer(19,2,this)">?</button>&#160;&#160;Conectar dispositivos dentro de uma &#x00FA;nica resid&#x00EA;ncia ou pr&#x00E9;dio usando principalmente conex&#x00F5;es com fio.</li>
                     <li id="Q_19_3"><button class="FuncButton" id="Q_19_3_Btn" onclick="CheckMCAnswer(19,3,this)">?</button>&#160;&#160;Cobrir uma &#x00E1;rea metropolitana espec&#x00ED;fica, como uma cidade ou regi&#x00E3;o, conectando sistemas e LANs locais.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_20" style="display: none;">
                  <div class="QuestionText">O que define a topologia de rede em um ambiente de rede de computadores?</div>
                  <ol class="MCAnswers">
                     <li id="Q_20_0"><button class="FuncButton" id="Q_20_0_Btn" onclick="CheckMCAnswer(20,0,this)">?</button>&#160;&#160;O m&#x00E9;todo utilizado para proteger os dados transmitidos na rede contra acesso n&#x00E3;o autorizado.</li>
                     <li id="Q_20_1"><button class="FuncButton" id="Q_20_1_Btn" onclick="CheckMCAnswer(20,1,this)">?</button>&#160;&#160;O tipo de software utilizado para gerenciar a comunica&#x00E7;&#x00E3;o entre os computadores na rede.</li>
                     <li id="Q_20_2"><button class="FuncButton" id="Q_20_2_Btn" onclick="CheckMCAnswer(20,2,this)">?</button>&#160;&#160;A quantidade de dados que pode ser transmitida atrav&#x00E9;s da rede em um determinado per&#x00ED;odo de tempo.</li>
                     <li id="Q_20_3"><button class="FuncButton" id="Q_20_3_Btn" onclick="CheckMCAnswer(20,3,this)">?</button>&#160;&#160;A organiza&#x00E7;&#x00E3;o dos computadores e outros componentes na rede, podendo ser f&#x00ED;sica ou l&#x00F3;gica.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_21" style="display: none;">
                  <div class="QuestionText">Qual &#x00E9; a diferen&#x00E7;a entre topologia f&#x00ED;sica e l&#x00F3;gica em redes de computadores?</div>
                  <ol class="MCAnswers">
                     <li id="Q_21_0"><button class="FuncButton" id="Q_21_0_Btn" onclick="CheckMCAnswer(21,0,this)">?</button>&#160;&#160;A topologia f&#x00ED;sica foca na seguran&#x00E7;a da rede, enquanto a topologia l&#x00F3;gica foca na efici&#x00EA;ncia da transmiss&#x00E3;o de dados.</li>
                     <li id="Q_21_1"><button class="FuncButton" id="Q_21_1_Btn" onclick="CheckMCAnswer(21,1,this)">?</button>&#160;&#160;A topologia f&#x00ED;sica &#x00E9; determinada pelo software, e a topologia l&#x00F3;gica &#x00E9; determinada pelo hardware.</li>
                     <li id="Q_21_2"><button class="FuncButton" id="Q_21_2_Btn" onclick="CheckMCAnswer(21,2,this)">?</button>&#160;&#160;A topologia f&#x00ED;sica se refere ao n&#x00FA;mero de computadores na rede, enquanto a l&#x00F3;gica se refere ao tipo de conex&#x00E3;o &#x00E0; internet.</li>
                     <li id="Q_21_3"><button class="FuncButton" id="Q_21_3_Btn" onclick="CheckMCAnswer(21,3,this)">?</button>&#160;&#160;A topologia f&#x00ED;sica descreve o layout real e as conex&#x00F5;es f&#x00ED;sicas, enquanto a l&#x00F3;gica descreve como os dados fluem independentemente das conex&#x00F5;es f&#x00ED;sicas.</li>
                  </ol>
               </li>
               <li class="QuizQuestion" id="Q_22" style="display: none;">
                  <div class="QuestionText">Como a topologia f&#x00ED;sica de uma rede pode influenciar seu desempenho?</div>
                  <ol class="MCAnswers">
                     <li id="Q_22_0"><button class="FuncButton" id="Q_22_0_Btn" onclick="CheckMCAnswer(22,0,this)">?</button>&#160;&#160;Influenciando fatores cr&#x00ED;ticos como flexibilidade, velocidade e seguran&#x00E7;a da rede.</li>
                     <li id="Q_22_1"><button class="FuncButton" id="Q_22_1_Btn" onclick="CheckMCAnswer(22,1,this)">?</button>&#160;&#160;Modificando o software de gerenciamento de rede para otimizar o fluxo de dados.</li>
                     <li id="Q_22_2"><button class="FuncButton" id="Q_22_2_Btn" onclick="CheckMCAnswer(22,2,this)">?</button>&#160;&#160;Alterando os protocolos de comunica&#x00E7;&#x00E3;o usados para transmitir dados.</li>
                     <li id="Q_22_3"><button class="FuncButton" id="Q_22_3_Btn" onclick="CheckMCAnswer(22,3,this)">?</button>&#160;&#160;Variando o n&#x00FA;mero de usu&#x00E1;rios que podem acessar a rede simultaneamente.</li>
                  </ol>
               </li>
            </ol>
         </div>
      </div>
      <div class="Feedback" id="FeedbackDiv" style="margin-top:-200px; background-color: #45182C; padding: 10px">
         <div class="FeedbackText" id="FeedbackContent" style="font-size: 30px; color: White"></div>
         <button id="FeedbackOKButton" class="FuncButton" onclick="HideFeedback(); return false;">&#160;OK&#160;</button>
      </div>
      <!-- BeginBottomNavButtons 
      <div class="NavButtonBar" id="BottomNavBar">
         <button class="NavButton" onclick="location='contents.htm'; return false;"> Index </button>
         <button class="NavButton" onclick="location='nextpage.htm'; return false;">=&gt;</button>
      </div>-->
      <!-- EndBottomNavButtons -->
      <!-- BeginSubmissionForm -->
      <!-- EndSubmissionForm -->
   </body>
</html>
